///
/// Copyright (C) 2016, Dependable Systems Laboratory, EPFL
/// Copyright (C) 2016, Cyberhaven
/// All rights reserved.
///
/// Licensed under the Cyberhaven Research License Agreement.
///

#ifndef S2E_PLUGINS_RecipeMemHelpers_H_
#define S2E_PLUGINS_RecipeMemHelpers_H_

#include <unordered_set>
#include <vector>

#include "Recipe.h"

namespace s2e {
namespace plugins {
namespace recipe {

void FindSequencesOfSymbolicData(const BitArray *concreteMask, uint64_t baseAddr, AddrSize *prevItem,
                                 std::vector<AddrSize> &sequences);

void FindSequencesOfSymbolicData(MemoryMap *map, S2EExecutionState *state, uint64_t pid, bool mustBeExecutable,
                                 std::vector<AddrSize> &symbolicSequences);

void FindMemoryPages(MemoryMap *map, S2EExecutionState *state, uint64_t pid, bool mustBeWritable, bool mustBeExecutable,
                     std::unordered_set<uint64_t> &pages);
}
}
}

#endif
